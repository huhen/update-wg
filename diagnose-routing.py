#!/usr/bin/env python3
import subprocess
import sys
import os

def execute_command(cmd, description=""):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            if description:
                print(f"‚úÖ {description}")
            return result.stdout
        else:
            if description:
                print(f"‚ùå {description}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã '{cmd}': {e}")
        return None

def execute_command_no_check(cmd, description="", shell=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–¥–ª—è –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è —Å –æ—à–∏–±–∫–æ–π)"""
    try:
        result = subprocess.run(cmd, shell=shell, capture_output=True, text=True)
        if description:
            print(f"‚úÖ {description}", file=sys.stderr)
        return result.stdout, result.returncode
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã '{cmd}': {e}", file=sys.stderr)
        return None, -1
    
def check_ipset():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ ipset –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ipset...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ ipset
    result = execute_command("ipset list wg_allowed_ips", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è ipset wg_allowed_ips")
    if result:
        print("‚úÖ ipset wg_allowed_ips —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (–∏—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º, –∞ –Ω–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
        lines = result.split('\n')
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∏—â–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ —Å–æ–¥–µ—Ä–∂–∞—Ç IP-–∞–¥—Ä–µ—Å–∞
        entries = [line for line in lines if '.' in line and any(c.isdigit() for c in line) and not line.startswith('Name:') and not line.startswith('Type:') and not line.startswith('Revision:') and not line.startswith('Header:') and not line.startswith('Size in memory:') and not line.startswith('References:') and not line.startswith('Number of entries:') and not line.startswith('Members:')]
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(entries)} –∑–∞–ø–∏—Å–µ–π –≤ ipset")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ ipset –Ω—É–∂–Ω—ã–π IP —Å –ø–æ–º–æ—â—å—é ipset test
        target_ip = "151.101.194.217"
        test_result = execute_command_no_check(f"ipset test wg_allowed_ips {target_ip}", "")
        if test_result[1] == 0:  # –ï—Å–ª–∏ –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ 0, –∑–Ω–∞—á–∏—Ç IP –≤ ipset
            print(f"‚úÖ –¶–µ–ª–µ–≤–æ–π IP {target_ip} –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ ipset")
        else:
            print(f"‚ùå –¶–µ–ª–µ–≤–æ–π IP {target_ip} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ ipset")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º, –º–æ–∂–µ—Ç –±—ã—Ç—å IP –≤—Ö–æ–¥–∏—Ç –≤ –æ–¥–∏–Ω –∏–∑ CIDR –±–ª–æ–∫–æ–≤
            print(f"üí° –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Ö–æ–¥–∏—Ç –ª–∏ {target_ip} –≤ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö CIDR –±–ª–æ–∫–æ–≤...")
            for line in entries:
                if line.strip():
                    # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∂–¥—ã–π CIDR –±–ª–æ–∫ –Ω–∞ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ IP
                    cidr = line.strip()
                    check_cmd = f"python3 -c \"from netaddr import IPNetwork, IPAddress; print(IPAddress('{target_ip}') in IPNetwork('{cidr}'))\" 2>/dev/null || echo 'need to check manually'"
                    check_result = execute_command_no_check(check_cmd, "")
                    if check_result and "True" in str(check_result[0]):
                        print(f"‚úÖ –¶–µ–ª–µ–≤–æ–π IP {target_ip} –≤—Ö–æ–¥–∏—Ç –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –±–ª–æ–∫ {cidr}")
                        break
            else:
                print(f"‚ùå –¶–µ–ª–µ–≤–æ–π IP {target_ip} –Ω–µ –≤—Ö–æ–¥–∏—Ç –Ω–∏ –≤ –æ–¥–∏–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –±–ª–æ–∫")
    else:
        print("‚ùå ipset wg_allowed_ips –Ω–µ –Ω–∞–π–¥–µ–Ω")

def check_iptables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç iptables –ø—Ä–∞–≤–∏–ª–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ iptables –ø—Ä–∞–≤–∏–ª...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º OUTPUT –ø—Ä–∞–≤–∏–ª–∞
    result = execute_command("iptables -L OUTPUT -v -n", "–ü—Ä–æ–≤–µ—Ä–∫–∞ OUTPUT –ø—Ä–∞–≤–∏–ª")
    if result and "MARK" in result:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã OUTPUT MARK –ø—Ä–∞–≤–∏–ª–∞")
    else:
        print("‚ùå OUTPUT MARK –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º mangle —Ç–∞–±–ª–∏—Ü—É
    result = execute_command("iptables -t mangle -L PREROUTING -v -n", "–ü—Ä–æ–≤–µ—Ä–∫–∞ PREROUTING –ø—Ä–∞–≤–∏–ª –≤ mangle")
    if result and "MARK" in result:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã PREROUTING MARK –ø—Ä–∞–≤–∏–ª–∞")
    else:
        print("‚ùå PREROUTING MARK –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

def check_wireguard():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ WireGuard –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ WireGuard –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    result = execute_command("ip link show wg1", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ wg1")
    if result:
        print("‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å wg1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("‚ùå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å wg1 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    result = execute_command("ip addr show wg1", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ wg1")
    if result:
        print("‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å wg1 –∞–∫—Ç–∏–≤–µ–Ω")
        print(f"   –ê–¥—Ä–µ—Å–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ wg1: {result.strip()}")
    else:
        print("‚ùå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å wg1 –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å WireGuard
    result = execute_command("wg show wg1", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ WireGuard")
    if result:
        print("‚úÖ WireGuard wg1 —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"   –°—Ç–∞—Ç—É—Å: {result.strip()}")
    else:
        print("‚ùå WireGuard wg1 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é WireGuard
    try:
        with open('/etc/wireguard/wg1.conf', 'r') as f:
            content = f.read()
        
        if 'Table = off' in content:
            print("‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä 'Table = off' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ wg1")
        else:
            print("‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä 'Table = off' –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ wg1")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ wg1: {e}")

def check_routing(ip_to_test="151.101.194.217"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ IP"""
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è {ip_to_test}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ IP
    result = execute_command(f"ip route get {ip_to_test}", f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è {ip_to_test}")
    if result:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –æ–±—ã—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è {ip_to_test}")
        print(f"   –ú–∞—Ä—à—Ä—É—Ç: {result.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–¥–µ—Ç –ª–∏ —Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ wg1 –≤ –æ–±—ã—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
        if "wg1" in result:
            print(f"‚ö†Ô∏è –¢—Ä–∞—Ñ–∏–∫ –¥–ª—è {ip_to_test} –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ wg1 –≤ –æ–±—ã—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ (—ç—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
        else:
            print(f"‚ùå –¢—Ä–∞—Ñ–∏–∫ –¥–ª—è {ip_to_test} –ù–ï –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ wg1 –≤ –æ–±—ã—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    else:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—ã—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è {ip_to_test}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º fwmark (–∫–∞–∫ –µ—Å–ª–∏ –±—ã —Ç—Ä–∞—Ñ–∏–∫ –±—ã–ª –ø–æ–º–µ—á–µ–Ω)
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è {ip_to_test} —Å fwmark 0x1 (–∫–∞–∫ –µ—Å–ª–∏ –±—ã iptables –µ–≥–æ –ø–æ–º–µ—Ç–∏–ª)...")
    result = execute_command(f"ip route get {ip_to_test} fwmark 0x1", f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ —Å fwmark –¥–ª—è {ip_to_test}")
    if result:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Ä—à—Ä—É—Ç –¥–ª—è {ip_to_test} —Å fwmark 0x1")
        print(f"   –ú–∞—Ä—à—Ä—É—Ç: {result.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–¥–µ—Ç –ª–∏ —Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ wg1 –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ fwmark
        if "wg1" in result:
            print(f"‚úÖ –¢—Ä–∞—Ñ–∏–∫ –¥–ª—è {ip_to_test} —Å fwmark 0x1 –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ wg1")
        else:
            print(f"‚ùå –¢—Ä–∞—Ñ–∏–∫ –¥–ª—è {ip_to_test} —Å fwmark 0x1 –ù–ï –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ wg1")
    else:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–∞—Ä—à—Ä—É—Ç –¥–ª—è {ip_to_test} —Å fwmark 0x1")

def check_kernel_parameters():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞, –≤–ª–∏—è—é—â–∏–µ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —è–¥—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP forwarding
    result = execute_command("cat /proc/sys/net/ipv4/ip_forward", "–ü—Ä–æ–≤–µ—Ä–∫–∞ IP forwarding")
    if result and result.strip() == "1":
        print("‚úÖ IP forwarding –≤–∫–ª—é—á–µ–Ω")
    else:
        print("‚ùå IP forwarding –≤—ã–∫–ª—é—á–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ wg1)")

def check_policy_routing():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–∏—Ç–∏–∫—É –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
    result = execute_command("ip rule show", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏")
    if result:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:")
        print(f"   {result.strip()}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª –¥–ª—è fwmark
        lines = result.split('\n')
        fwmark_rules = [line for line in lines if "fwmark 0x1" in line and ("wg1_table" in line or "1000" in line)]
        if len(fwmark_rules) > 0:
            if len(fwmark_rules) == 1:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–æ 1 –ø—Ä–∞–≤–∏–ª–æ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è fwmark 0x1")
            else:
                print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(fwmark_rules)} –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è fwmark 0x1")
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è fwmark 0x1")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤
    result = execute_command("ip route show table wg1_table", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ wg1_table")
    if result:
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ wg1_table:")
        print(f"   {result.strip()}")
    else:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ wg1_table –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É ID
        result = execute_command("ip route show table 1000", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ 1000")
        if result:
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ 1000:")
            print(f"   {result.strip()}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ 1000 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∫–∞–∫–∏–µ-—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å —ç—Ç–∏–º ID
            result = execute_command("cat /etc/iproute2/rt_tables", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü")
            if result and "1000 wg1_table" in result:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 1000 –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ /etc/iproute2/rt_tables")
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 1000 –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ /etc/iproute2/rt_tables")

def check_systemd_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞ WireGuard"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ systemd —Å–µ—Ä–≤–∏—Å–∞...")
    
    result = execute_command("systemctl status wg-quick@wg1", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ wg-quick@wg1")
    if result and "active (exited)" in result:
        print("‚úÖ –°–µ—Ä–≤–∏—Å wg-quick@wg1 –∞–∫—Ç–∏–≤–µ–Ω")
    else:
        print("‚ùå –°–µ—Ä–≤–∏—Å wg-quick@wg1 –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")

def check_connection_to_target(target_ip="151.101.194.217"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Ü–µ–ª–µ–≤—ã–º IP"""
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å {target_ip}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Ü–µ–ª–µ–≤—ã–º IP
    result = execute_command(f"timeout 5 ping -c 1 -W 1 {target_ip}", f"–ü—Ä–æ–≤–µ—Ä–∫–∞ ping –∫ {target_ip}")
    if result:
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π ping –∫ {target_ip}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å ping –∫ {target_ip}")

def main():
    print("üî¨ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ WireGuard")
    print("="*50)
    
    check_ipset()
    check_iptables()
    check_wireguard()
    check_routing()
    check_kernel_parameters()
    check_policy_routing()
    check_systemd_service()
    check_connection_to_target()
    
    print("\n" + "="*50)
    print("üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ü–µ–ª–µ–≤–æ–π IP –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ ipset wg_allowed_ips")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ iptables MARK –ø—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –ø–æ–ª–∏—Ç–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ (ip rule) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ 1000 (wg1_table) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print("5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Ç–∞–±–ª–∏—Ü–µ 1000 –≤–µ–¥–µ—Ç —á–µ—Ä–µ–∑ wg1")
    print("6. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å wg1 –∞–∫—Ç–∏–≤–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω")
    print("7. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤–∫–ª—é—á–µ–Ω IP forwarding –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("\nüí° –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: tcpdump -i wg1 -n")
    print("üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞: iptables -t mangle -L -v -n")

if __name__ == '__main__':
    main()